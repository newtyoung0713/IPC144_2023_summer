1.
Explanation:
The first function's prototype is void. I used it for sorting date by bubble sort algorithm to sort an array of Appointment structs and based on its date and time values. I made it converted from each elements to minutes to short everything, and easy to compare everything by minute element. After compared, I substrated the minute element back to the original value and print everything out on the screen.
The second function's prototype is a void type as well. This function I made for when user can type the date (year, month and day), also can type the time(hour and minute). Therefore, this function has to include two structs from Date and Time. The programmer uses withDate and withTime to provide the user input the year, month and day elements, and the data part will determine is it a leap year and in different month provides different days. Moreover, if withTime is true, then provide the user inputs the hour and minute, and make sure everything is in the valid number.

Purpose and Value:
I made it as a function was to provide a sorting mechanism for the list of appointments based on their date and time. Moreover, to short the repetitive code to be one block code. Then could make different function to easy accessing the bubble sort function; furthermore, this function enhances the user experience by ensuring that appointments are presented in an easily understandable order.
For this function, to short codes in different functions if needed. In different function can use both Date and Time or one of them. And store the value into the array of structure, to compare with database; furthermore, by encapsulating the input process within this function, the application ensures that the date and time information is accurately collected and prepared for making sure the helper function can use in different function and different way in the future.


2.
To begin with, we reduce to use scanf for reduced Coupling. Based on reducing coupling to enhances code modularity, making it easier to test, debug, and extend individual parts of the application in the future. In summary, minimizing scanf function calls is for to improving user interaction, input validation, and code maintainability.

In additional, to limited using scanf is for code readability and maintainability because overusing scanf can lead to complex and hard-to-read code, especially when dealing with different data types and input scenarios. Therefore, Minimizing scanf calls encourages a more modular and organized code structure, making the code easier to understand and maintain.

Futhermore, the one of the reason is for input validation. Based on scanf can be prone to input errors and buffer overflows, so if do not used it carefully, also by limiting its usage, the program can focus on implementing thorough input validation and error handling routines, ensuring that user input is correctly interpreted and processed. This helps prevent crashes or unexpected behavior due to invalid input.

3.
According to the first question, I did create two helper functions to this program. For the first function, it focuses on sorting everything by the year, month, day, hour and minute from the datebase of file. Therefore, there are some functions need to use bubble sort algorithm to sort an array of Appointment structs and based on its date and time values. Such as, the viewAllAppointments function, and the viewAppointmentSchedule function. The reason why I put the bubble sort algorithm in these two functions for view the appointments patient data by the organisation order. This bubble sorting can be used in some functions; moreover, make this as a function, one reducing the code and two is maintain the code block easily.
For the second function, it placed in these two functions, addAppointment and removeAppointment. The inputDate function coded in functions because both are using the value of year, month, day, hour and minute to access the database file, and to increase or to remove the patient data from the database. This second function in this program for, easy to maintain and reducing the code block as well. And using two boolean type to control the date and time code block in different part using. Therefore, it will make the functions more flexibility.